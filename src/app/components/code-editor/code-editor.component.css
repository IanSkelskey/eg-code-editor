:host {
  /* Use Evergreen color variables */
  --code-bg: var(--bs-body-bg);
  --code-fg: var(--bs-body-color);
  --code-border: var(--border);
  --line-numbers-bg: var(--bs-body-bg-alt);
  --line-numbers-fg: var(--bs-text-highlight);
  --scrollbar-track: var(--bs-body-bg-alt);
  --scrollbar-thumb: var(--bs-gray-500);
  --scrollbar-thumb-hover: var(--bs-gray-600);
  /* make the component fill its parent flex area */
  display: block;
  height: 100%;
  min-width: 0;
  min-height: 0;
}

/* Container for the code editor */
.code-editor-container {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 0;                  /* no rounding at connection points */
  border: none;                      /* remove full border */
  border-left: 1px solid var(--border);
  border-right: 1px solid var(--border);
  overflow: hidden;
  background: var(--code-bg);
  display: flex;
  flex-direction: column;
}

/* Main editor area - contains line numbers and code */
.editor-main {
  display: flex;
  flex: 1;
  overflow: hidden;
  /* allow children to scroll inside */
  min-height: 0;
}

/* Status bar */
.status-bar {
  display: flex;
  align-items: center;
  justify-content: space-between; /* Changed back to space-between to have left and right sides */
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  color: var(--bs-text-highlight);
  background-color: var(--line-numbers-bg);
  border-top: 1px solid var(--code-border);
  height: 1.5rem;
}

.status-left {
  display: flex;
  align-items: center;
  gap: 0.5rem; /* Add gap between buttons */
}

.status-right {
  display: flex;
  align-items: center;
  gap: 1rem; /* Increased gap from 0.5rem to 1rem for more spacing between items */
}

/* Action button styling (common to both load and save) */
.action-button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: var(--bs-text-highlight);
  cursor: pointer;
  padding: 0.15rem 0.4rem;
  border-radius: 0.25rem;
  transition: background-color 0.2s;
  gap: 0.3rem;
}

.action-button:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.action-button:focus-visible {
  outline: 0.15rem solid rgba(var(--primary-focus-outline-rgb), 0.75);
}

/* Icon styling - try different icon libraries that might be in use */
.action-button i {
  font-size: 1rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.action-button .material-icons {
  font-size: 0.9rem;
}

.button-text {
  font-size: 0.75rem;
}

/* Save button styling */
.save-button {
  /* Custom save button styles */
}

/* Load button styling */
.load-button {
  /* Custom load button styles */
}

/* Cursor position indicator */
.cursor-position {
  color: var(--bs-text-highlight);
  font-size: 0.75rem;
}

.separator {
  opacity: 0.5;
}

/* Line numbers toggle */
.line-numbers-toggle {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  color: var(--bs-text-highlight);
  font-size: 0.75rem;
  padding: 0.1rem 0.4rem;
  cursor: pointer;
  border-radius: 0.25rem;
  user-select: none;
}

.line-numbers-toggle:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.line-numbers-toggle input[type="checkbox"] {
  margin: 0;
  cursor: pointer;
  position: relative;
  top: -0.05rem;
}

.toggle-icon {
  font-size: 0.8rem;
}

.language-indicator {
  text-transform: lowercase;
  opacity: 0.8;
}

/* Line numbers container */
.line-numbers {
  flex: 0 0 3.5rem;
  padding: 1rem 0.5rem;
  padding-bottom: calc(1rem + 8px); /* Match the code area padding */
  background: var(--line-numbers-bg);
  border-right: 1px solid var(--code-border);
  color: var(--line-numbers-fg);
  font: inherit;
  font-size: 14px;
  line-height: 1.5;
  text-align: right;
  z-index: 3;
  overflow-y: hidden;
  user-select: none;
}

.line-number {
  display: block;
  min-height: 1.5em;
}

/* Add this to ensure line numbers have the same bottom spacing */
.line-numbers::after {
  content: '';
  display: block;
  height: 1rem; /* Match the height in code-input::after */
  width: 100%;
}

/* Code area wrapper - contains both textarea and pre */
.code-area {
  position: relative;
  flex: 1;
  overflow: hidden;
  height: 100%;
  /* allow absolutely-positioned children to scroll */
  min-height: 0;
}

/* Shared styles for code elements */
.code-input,
.code-display {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 1rem;
  margin: 0;
  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
  font-size: 14px;
  line-height: 1.5;
  white-space: pre;
  word-wrap: normal;
  overflow-wrap: normal;
  overflow-y: auto;
  overflow-x: auto;
  box-sizing: border-box;
  tab-size: 2;
}

/* Add this to fix bottom alignment */
.code-input::after,
.code-display::after {
  content: '';
  display: inline-block;
  height: 1rem; /* Extra space at the bottom to ensure alignment */
  width: 100%;
}

/* Final empty line fix */
.code-display {
  background: transparent;
  color: var(--code-fg);
  z-index: 1;
  pointer-events: none;
  padding-bottom: calc(1rem + 8px); /* Add extra bottom padding to account for horizontal scrollbar */
  user-select: none; /* Prevent text selection on the display layer */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.code-input {
  border: none;
  outline: none;
  background: transparent;
  color: transparent;
  caret-color: var(--code-fg);
  resize: none;
  z-index: 2;
  padding-bottom: calc(1rem + 8px); /* Same padding as code-display */
}

/* Focus style */
.code-input:focus-visible {
  outline: 0.25rem solid rgba(var(--primary-focus-outline-rgb), 0.75);
  outline-offset: -1px;
}

/* Scrollbar styling */
:is(.code-input, .code-display, .line-numbers)::-webkit-scrollbar {
  width: 8px;
  height: 8px;
  display: block;
}

:is(.code-input, .code-display, .line-numbers)::-webkit-scrollbar:horizontal {
  display: none;
  height: 0;
}

:is(.code-input, .code-display, .line-numbers).show-horizontal-scrollbar::-webkit-scrollbar:horizontal {
  display: block;
  height: 8px;
}

:is(.code-input, .code-display, .line-numbers)::-webkit-scrollbar-track {
  background: var(--scrollbar-track);
  cursor: default;
}

:is(.code-input, .code-display, .line-numbers)::-webkit-scrollbar-thumb {
  background: var(--scrollbar-thumb);
  border-radius: 4px;
  cursor: default;
}

:is(.code-input, .code-display, .line-numbers)::-webkit-scrollbar-thumb:hover {
  background: var(--scrollbar-thumb-hover);
  cursor: default;
}

/* Add styling for scrollbar corner to match the track color */
:is(.code-input, .code-display, .line-numbers)::-webkit-scrollbar-corner {
  background: var(--scrollbar-track);
  cursor: default;
}

/* Highlight.js theme customization */
.code-display .hljs {
  background: transparent !important;
  font: inherit;
}

/* Screen reader only class */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

@media (max-width: 768px) {
  .code-editor-container {
    border-left: none;
    border-right: none;
  }
}
